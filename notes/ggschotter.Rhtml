<!doctype html> <html lang=en> <head> <meta charset=utf-8> <title>Stefan
Siegert</title> <link rel=stylesheet href=/style.css> <script
id="MathJax-script" async
src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
</head> <body> <h1><a href=/ title="Stefan Siegert">Stefan Siegert</a></h1>

<!--begin.rcode init, echo=FALSE
  prefix = paste('fig/', knitr::current_input(dir=FALSE), '-', sep='')
  knitr::opts_chunk$set(fig.width=10, fig.height=10, fig.path=prefix)
end.rcode-->


<h2>Schotter in ggplot</h2>

<p>This piece is inspired by the 1960 computer graphic <a href="http://www.medienkunstnetz.de/works/schotter/">Schotter</a>. The image is a simple square tiling that transitions from ordered to disorderd. It seemed straightforward to create something similar in R, with a few random numbers and some ggplot magic. And I'm really quite happy with the outcome.


<!--begin.rcode, eval=FALSE
library(tidyverse)
end.rcode-->
<!--begin.rcode, include=FALSE
library(tidyverse)
library(patchwork)
set.seed(123)
end.rcode-->


<!--begin.rcode schotter1
crossing(x=0:10, y=0:10) %>%
  mutate(dx = rnorm(n(), 0, (y/30)^1.5),
         dy = rnorm(n(), 0, (y/30)^1.5)) %>%
  ggplot() +
    geom_tile(aes(x=x+dx, y=y+dy),
              fill='darkorange3', colour='black',                                                  
              lwd=2, width=1, height=1, alpha=.7,
              show.legend=FALSE) +
    scale_y_reverse() +
    theme_void()
end.rcode-->



<p>Here is another one with a nice color gradient:

<!--begin.rcode schotter2
crossing(x=0:10, y=0:10) %>%
  mutate(dx = rnorm(n(), 0, (y/20)^1.5),
         dy = rnorm(n(), 0, (y/20)^1.5)) %>%
  ggplot() +
    geom_tile(aes(x=x+dx, y=y+dy, fill=y), colour='black',
              lwd=2, width=1, height=1, alpha=0.8,
              show.legend=FALSE) +
    scale_fill_gradient(high='#9f025e', low='#f9c929') +
    scale_y_reverse() +
    theme_void()
end.rcode-->


<p>It isn't straightforward to add rotation to any of the tile/rect/raster geometries in ggplot, as in the original image.
To include rotation I would probably use geom_polygon, but the data generation and plotting code would become much more complicated.
But honestly I really like the images without the rotation effect, so that's ok.


